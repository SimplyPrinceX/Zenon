{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/simpl/Desktop/nova-main/zeon/src/app/watch/%5Btype%5D/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\nimport { useState, useEffect } from \"react\";\nimport Image from \"next/image\";\nimport { useRouter, useParams } from \"next/navigation\";\n\nconst TMDB_API_KEY = process.env.NEXT_PUBLIC_TMDB_API_KEY || \"1070730380f5fee0d87cf0382670b255\";\nconst TMDB_BASE = \"https://api.themoviedb.org/3\";\nconst CONSUMET_BASE = \"https://api.consumet.org/anime/enime\";\n\ninterface Genre {\n  id: number;\n  name: string;\n}\ninterface Content {\n  id: number | string;\n  title?: string;\n  name?: string;\n  release_date?: string;\n  first_air_date?: string;\n  vote_average?: number;\n  genres?: Genre[];\n  overview?: string;\n  description?: string;\n  poster_path?: string;\n  number_of_seasons?: number;\n  total_episodes?: number;\n  anime_type?: string;\n  tmdb_id?: number;\n  [key: string]: unknown;\n}\n\ninterface Source {\n  id: string;\n  name: string;\n  urls: {\n    movie: string;\n    tv: string;\n  };\n}\n\nexport default function WatchPage() {\n  const router = useRouter();\n  const params = useParams();\n  \n  // Helper function to map popular anime MyAnimeList IDs to TMDB IDs\n  const mapAnimeToTMDB = (malId: string): number | null => {\n    const animeMap: { [key: string]: number } = {\n      '16498': 1429,    // Attack on Titan\n      '38000': 85937,   // Demon Slayer\n      '31964': 65930,   // My Hero Academia\n      '21': 37854,      // One Piece\n      '20': 46298,      // Naruto\n      '1': 1399,        // Dragon Ball Z\n      '269': 1425,      // Bleach\n      '11061': 46225,   // Hunter x Hunter\n      '28851': 37165,   // Death Note\n      '1530': 1399,     // Dragon Ball\n      '1575': 1399,     // Dragon Ball GT\n      '813': 1399,      // Dragon Ball Super\n    };\n    return animeMap[malId] || null;\n  };\n  \n  // All hooks must be called before any early returns\n  const [content, setContent] = useState<Content | null>(null);\n  const [source, setSource] = useState('embedsu');\n  const [sourcesList, setSourcesList] = useState<Source[]>([]);\n  const [autoSwitch, setAutoSwitch] = useState(true);\n  const [videoErrorCount, setVideoErrorCount] = useState(0);\n  const [showWatchLater, setShowWatchLater] = useState(false);\n  const [showContextMenu, setShowContextMenu] = useState(false);\n  const [contextMenuPos, setContextMenuPos] = useState<{ x: number; y: number }>({ x: 0, y: 0 });\n  const [seasons, setSeasons] = useState<number[]>([]);\n  const [episodes, setEpisodes] = useState<number[]>([]);\n  const [episodeList, setEpisodeList] = useState<any[]>([]);\n  const [selectedSeason, setSelectedSeason] = useState(1);\n  const [selectedEpisode, setSelectedEpisode] = useState(1);\n  const [videoUrl, setVideoUrl] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [watchLater, setWatchLater] = useState<Content[]>([]);\n  const [copied, setCopied] = useState<string | null>(null);\n  const [similar, setSimilar] = useState<Content[]>([]);\n  const [similarLoading, setSimilarLoading] = useState(false);\n\n  // Safely extract type and id as strings\n  const type = typeof params.type === 'string' ? params.type : Array.isArray(params.type) ? params.type[0] : '';\n  const id = typeof params.id === 'string' ? params.id : Array.isArray(params.id) ? params.id[0] : '';\n  \n  // Debug logging\n  console.log('Watch page params:', { type, id, params });\n\n  // Fetch sources.mjs dynamically\n  useEffect(() => {\n    import('../../../../sources.mjs').then((mod) => {\n      let sources = (mod.availableSources || []) as Source[];\n      // Always put multiembed first if available\n      const multiembedIdx = sources.findIndex(s => s.id === 'multiembed');\n      if (multiembedIdx > -1) {\n        const [multiembed] = sources.splice(multiembedIdx, 1);\n        sources = [multiembed, ...sources];\n      }\n      setSourcesList(sources);\n      // Set default source to multiembed if available\n      if (sources.length > 0) {\n        setSource(sources[0].id);\n      }\n    });\n  }, []);\n\n  // Fetch content details from TMDB or Cosmos API\n  useEffect(() => {\n    if (!id || !type) return;\n    async function fetchContent() {\n      setLoading(true);\n      let contentData = null;\n      \n      try {\n        console.log(`Fetching ${type} with ID: ${id}`);\n        if (type === 'movie') {\n          const res = await fetch(`${TMDB_BASE}/movie/${id}?api_key=${TMDB_API_KEY}&append_to_response=credits,similar`);\n          if (res.ok) {\n            contentData = await res.json();\n            console.log('Movie data:', contentData);\n          } else {\n            console.log('Movie fetch failed:', res.status, res.statusText);\n          }\n        } else if (type === 'tv') {\n          const res = await fetch(`${TMDB_BASE}/tv/${id}?api_key=${TMDB_API_KEY}&append_to_response=credits,similar`);\n          if (res.ok) {\n            contentData = await res.json();\n            console.log('TV data:', contentData);\n          } else {\n            console.log('TV fetch failed:', res.status, res.statusText);\n          }\n        } else if (type === 'anime') {\n          // Remove anime-specific logic. If an anime is loaded, treat as not found or fallback to movie/TV logic.\n          setContent(null);\n        }\n        \n        setContent(contentData);\n        \n        // Set seasons/episodes for TV and Anime\n        if ((type === 'tv' || type === 'anime') && contentData && contentData.number_of_seasons) {\n          setSeasons(Array.from({ length: contentData.number_of_seasons }, (_, i) => i + 1));\n          setSelectedSeason(1);\n        } else {\n          setSeasons([]);\n        }\n      } catch (error) {\n        console.error('Error fetching content:', error);\n      }\n      \n      setLoading(false);\n    }\n    fetchContent();\n  }, [id, type]);\n\n  // Fetch episodes for selected season (TV and Anime)\n  useEffect(() => {\n    if (!type || !content || !selectedSeason) return;\n    async function fetchEpisodes() {\n      if (type === 'tv' && content && selectedSeason) {\n        // TV shows - fetch from TMDB\n        const res = await fetch(`${TMDB_BASE}/tv/${id}/season/${selectedSeason}?api_key=${TMDB_API_KEY}`);\n        if (res.ok) {\n          const data = await res.json();\n          setEpisodeList(data.episodes || []);\n          setSelectedEpisode(1);\n        }\n      } else if (type === 'anime' && content) {\n        // Anime - handle based on anime type\n        if (content.anime_type === 'Movie') {\n          // Anime movies have 1 episode\n          setEpisodes([1]);\n          setEpisodeList([]);\n          setSelectedEpisode(1);\n        } else {\n          // Anime TV series - use total episodes or default to 12\n          const totalEpisodes = (content.total_episodes as number) || 12;\n          setEpisodes(Array.from({ length: totalEpisodes }, (_, i) => i + 1));\n          setEpisodeList([]);\n          setSelectedEpisode(1);\n        }\n      } else {\n        setEpisodes([]);\n        setEpisodeList([]);\n      }\n    }\n    fetchEpisodes();\n  }, [type, content, selectedSeason, id]);\n\n  // Set video embed URL\n  useEffect(() => {\n    if (!content || sourcesList.length === 0 || !type || !id) return;\n    const src = sourcesList.find((s) => s.id === source) || sourcesList[0];\n    let url = '';\n    \n    if (type === 'movie') {\n      url = src.urls.movie.replace('{id}', id);\n    } else if (type === 'tv') {\n      url = src.urls.tv.replace('{id}', id).replace('{season}', String(selectedSeason)).replace('{episode}', String(selectedEpisode));\n    } else if (type === 'anime') {\n      // For anime, try to find TMDB equivalent or use anime-specific sources\n      if (content.tmdb_id) {\n        // If we have a TMDB ID, use it for streaming\n        url = src.urls.tv.replace('{id}', content.tmdb_id.toString()).replace('{season}', String(selectedSeason)).replace('{episode}', String(selectedEpisode));\n      } else {\n        // Fallback: use MyAnimeList ID with anime-specific streaming sources\n        // Try to find an anime-compatible source\n        const animeSource = sourcesList.find(s => s.id === 'vidsrccc') || sourcesList[0];\n        if (animeSource) {\n          // Use a different approach for anime - try to map to TMDB anime\n          const tmdbAnimeId = mapAnimeToTMDB(id);\n          if (tmdbAnimeId) {\n            url = animeSource.urls.tv.replace('{id}', tmdbAnimeId.toString()).replace('{season}', String(selectedSeason)).replace('{episode}', String(selectedEpisode));\n          } else {\n            // Final fallback: use the MyAnimeList ID directly (some sources might work)\n            url = animeSource.urls.tv.replace('{id}', id).replace('{season}', String(selectedSeason)).replace('{episode}', String(selectedEpisode));\n          }\n        }\n      }\n    }\n    setVideoUrl(url);\n    setVideoErrorCount(0); // Reset error count on source change\n  }, [content, type, source, sourcesList, selectedSeason, selectedEpisode, id]);\n\n  // Fetch similar content\n  useEffect(() => {\n    if (!content || !type || !id) return;\n    async function fetchSimilar() {\n      setSimilarLoading(true);\n      let results: Content[] = [];\n      if (type === 'movie') {\n        const res = await fetch(`${TMDB_BASE}/movie/${id}/similar?api_key=${TMDB_API_KEY}`);\n        if (res.ok) {\n          const data = await res.json();\n          results = data.results || [];\n        }\n      } else if (type === 'tv') {\n        const res = await fetch(`${TMDB_BASE}/tv/${id}/similar?api_key=${TMDB_API_KEY}`);\n        if (res.ok) {\n          const data = await res.json();\n          results = data.results || [];\n        }\n      } else if (type === 'anime') {\n        // Consumet Enime API - try to get recommendations or search\n        try {\n          if (content && content.title) {\n            console.log('Fetching anime recommendations from Enime...');\n            const res = await fetch(`${CONSUMET_BASE}/search?query=${encodeURIComponent(content.title)}`);\n            if (res.ok) {\n              const data = await res.json();\n              console.log('Enime recommendations received:', data.results?.length || 0, 'items');\n              // Transform Consumet search results\n              results = (data.results || []).map((anime: { id: string; title: string; image: string; description?: string; releaseDate?: string; rating?: number }) => ({\n                id: anime.id,\n                title: anime.title,\n                name: anime.title,\n                description: anime.description,\n                overview: anime.description,\n                poster_path: anime.image,\n                release_date: anime.releaseDate,\n                vote_average: anime.rating,\n              }));\n            }\n          }\n        } catch (error) {\n          console.error('Error fetching anime recommendations:', error);\n        }\n      }\n      setSimilar(results.slice(0, 12));\n      setSimilarLoading(false);\n    }\n    fetchSimilar();\n  }, [type, id, content]);\n\n  // Watch Later: load from localStorage\n  useEffect(() => {\n    const stored = localStorage.getItem('watchLater');\n    if (stored) setWatchLater(JSON.parse(stored));\n  }, []);\n\n  // Watch Later: save to localStorage\n  useEffect(() => {\n    localStorage.setItem('watchLater', JSON.stringify(watchLater));\n  }, [watchLater]);\n\n  // Add a fallback mechanism to try different content types if the current one fails\n  useEffect(() => {\n    if (!content && !loading && type && id) {\n      console.log(`Content not found for ${type}/${id}, trying fallback...`);\n      // Try alternative content types if the current one failed\n      const fallbackTypes = type === 'tv' ? ['movie'] : type === 'movie' ? ['tv'] : [];\n      \n      const tryFallback = async () => {\n        for (const fallbackType of fallbackTypes) {\n          try {\n            console.log(`Trying fallback to ${fallbackType}...`);\n            const res = await fetch(`${TMDB_BASE}/${fallbackType}/${id}?api_key=${TMDB_API_KEY}&append_to_response=credits,similar`);\n            if (res.ok) {\n              const fallbackData = await res.json();\n              console.log(`Fallback ${fallbackType} data found:`, fallbackData);\n              setContent(fallbackData);\n              // Update the URL to reflect the correct type\n              window.history.replaceState(null, '', `/watch/${fallbackType}/${id}`);\n              break;\n            }\n          } catch (error) {\n            console.log(`Fallback ${fallbackType} failed:`, error);\n          }\n        }\n      };\n      \n      tryFallback();\n    }\n  }, [content, loading, type, id]);\n\n  // If type or id is missing, show an error or redirect\n  if (!type || !id) {\n    return <div className=\"p-8 text-center text-lg text-red-500\">Invalid URL: missing type or id.</div>;\n  }\n\n  // Watch Later helpers\n  const isInWatchLater = () => watchLater.some((item) => item.id === id && item.type === type);\n  const handleWatchLater = () => {\n    if (!content) return;\n    if (isInWatchLater()) {\n      setWatchLater(watchLater.filter((item) => !(item.id === id && (typeof item.type === 'string' || typeof item.type === 'number') && item.type === type)));\n    } else {\n      setWatchLater([\n        ...watchLater,\n        {\n          ...content,\n          id: id,\n          type: String(type),\n        },\n      ]);\n    }\n  };\n\n  // Context menu handler\n  const handleContextMenu = (e: React.MouseEvent) => {\n    e.preventDefault();\n    setShowContextMenu(true);\n    setContextMenuPos({ x: e.clientX, y: e.clientY });\n  };\n  const closeContextMenu = () => setShowContextMenu(false);\n\n  // Context menu actions\n  const handleCopy = (text: string, label: string) => {\n    navigator.clipboard.writeText(text);\n    setCopied(label);\n    setTimeout(() => setCopied(null), 1200);\n    closeContextMenu();\n  };\n\n  // UI polish: glassmorphic shadow, border, and hover for cards\n  const glassCard =\n    \"min-w-[180px] max-w-[180px] rounded-2xl bg-white/10 dark:bg-black/20 backdrop-blur-xl border border-white/20 dark:border-black/20 shadow-lg overflow-hidden hover:scale-105 hover:shadow-2xl transition cursor-pointer\";\n\n  return (\n    <div className=\"max-w-7xl mx-auto px-4 py-8 mt-16\">\n      {/* Glassmorphic Player Card */}\n      <div className=\"relative rounded-3xl overflow-hidden mb-8 shadow-2xl border border-white/20 dark:border-black/20 backdrop-blur-2xl bg-white/10 dark:bg-black/20\">\n        {/* Video Embed */}\n        <div className=\"aspect-video w-full bg-black/80 flex items-center justify-center\" onContextMenu={handleContextMenu}>\n          {videoUrl ? (\n            <iframe\n              src={videoUrl}\n              allowFullScreen\n              className=\"w-full h-full rounded-3xl border-none\"\n              style={{ minHeight: 320 }}\n              onError={() => {\n                if (autoSwitch && videoErrorCount < sourcesList.length - 1) {\n                  // Try next source\n                  const currentIdx = sourcesList.findIndex(s => s.id === source);\n                  const nextIdx = (currentIdx + 1) % sourcesList.length;\n                  setSource(sourcesList[nextIdx].id);\n                  setVideoErrorCount(videoErrorCount + 1);\n                }\n              }}\n            />\n          ) : (\n            <span className=\"text-white/60\">Player loading...</span>\n          )}\n        </div>\n      </div>\n      {/* Content Details Card (moved below player) */}\n      <div className=\"rounded-3xl glass-card mb-8 p-6\">\n        {loading ? (\n          <div className=\"text-white/70\">Loading...</div>\n        ) : content ? (\n          <>\n            <h1 className=\"text-3xl font-extrabold text-white drop-shadow-lg mb-2\">{content.title || content.name}</h1>\n            <div className=\"flex flex-wrap gap-4 items-center mb-2\">\n              {content.release_date && <span className=\"text-white/80 font-semibold\">{(content.release_date || content.first_air_date || '').slice(0, 4)}</span>}\n              {content.vote_average && <span className=\"text-yellow-400 font-bold\">⭐ {content.vote_average.toFixed(1)}</span>}\n              {content.genres && content.genres.map((g: Genre) => (\n                <span key={g.id} className=\"px-2 py-1 rounded-full bg-white/20 text-white/80 text-xs font-medium\">{g.name}</span>\n              ))}\n            </div>\n            <p className=\"text-lg text-white/90 max-w-xl drop-shadow mb-2\">{content.overview || content.description}</p>\n            {/* Cast Info */}\n            {(() => {\n              const credits = content.credits as any;\n              if (credits && Array.isArray(credits.cast) && credits.cast.length > 0) {\n                return (\n                  <div className=\"mt-6\">\n                    <h3 className=\"text-xl font-bold text-white mb-3\">Cast</h3>\n                    <div className=\"flex gap-4 overflow-x-auto pb-2 scrollbar-thin scrollbar-thumb-cyan-400/30 scrollbar-track-transparent\">\n                      {credits.cast.slice(0, 15).map((actor: any) => (\n                        <div key={actor.cast_id || actor.credit_id} className=\"flex flex-col items-center min-w-[96px] max-w-[96px]\">\n                          <div className=\"w-20 h-20 rounded-full overflow-hidden bg-gray-700 mb-2\">\n                            {actor.profile_path ? (\n                              <Image\n                                src={`https://image.tmdb.org/t/p/w185${actor.profile_path}`}\n                                alt={actor.name}\n                                width={80}\n                                height={80}\n                                className=\"object-cover w-full h-full\"\n                              />\n                            ) : (\n                              <div className=\"w-full h-full flex items-center justify-center text-white/40 text-2xl\">?</div>\n                            )}\n                          </div>\n                          <div className=\"text-white text-xs font-semibold text-center truncate w-full\">{actor.name}</div>\n                          <div className=\"text-gray-400 text-xs text-center truncate w-full\">{actor.character}</div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                );\n              }\n              return null;\n            })()}\n          </>\n        ) : (\n          <div className=\"text-white/70\">Not found.</div>\n        )}\n      </div>\n      {/* Controls: Source, Season/Episode, Watch Later, etc. */}\n      <div className=\"flex flex-wrap gap-4 mb-8 items-center\">\n        {/* Source selector as pill buttons (Nova style, multi-line) */}\n        <div className=\"flex flex-wrap gap-2 w-full mb-2\">\n          {sourcesList.map((s) => (\n            <button\n              key={s.id}\n              className={`px-4 py-2 rounded-full font-semibold transition border text-sm min-w-[110px] text-center whitespace-nowrap\n                ${source === s.id ? 'bg-purple-600 text-white border-purple-400 shadow' : 'bg-[#232329] text-white border-[#232329] hover:bg-cyan-900'}`}\n              onClick={() => setSource(s.id)}\n            >\n              {s.name}\n            </button>\n          ))}\n        </div>\n        {/* Killswitch for auto source switching */}\n        <label className=\"flex items-center gap-2 text-white font-semibold cursor-pointer\">\n          <input\n            type=\"checkbox\"\n            checked={autoSwitch}\n            onChange={() => setAutoSwitch(v => !v)}\n            className=\"accent-cyan-500 w-4 h-4\"\n          />\n          Auto Switch Source\n        </label>\n        {/* Season/Episode selector for TV (Nova style) */}\n        {type === 'tv' && seasons.length > 0 && content && (\n          <div className=\"flex flex-col gap-2 w-full\">\n            {/* Season selector */}\n            <div className=\"flex gap-2 overflow-x-auto pb-2 scrollbar-thin scrollbar-thumb-cyan-400/30 scrollbar-track-transparent\">\n              {seasons.map((s) => (\n                <button\n                  key={s}\n                  className={`px-4 py-2 rounded-lg font-semibold transition border ${selectedSeason === s ? 'bg-cyan-700 text-white border-cyan-400' : 'bg-[#232329] text-white border-[#232329] hover:bg-cyan-900'}`}\n                  onClick={() => setSelectedSeason(s)}\n                >\n                  Season {s}\n                </button>\n              ))}\n            </div>\n            {/* Episodes grid */}\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-5 mt-2\">\n              {episodeList.length > 0\n                ? episodeList.map((ep: any, idx: number) => (\n                    <button\n                      key={ep.id || idx}\n                      className={`flex flex-col items-start rounded-xl border transition p-0 overflow-hidden shadow-md ${selectedEpisode === ep.episode_number ? 'border-purple-500 ring-2 ring-purple-400' : 'border-[#232329] hover:ring-2 hover:ring-cyan-400'}`}\n                      onClick={() => setSelectedEpisode(ep.episode_number)}\n                      style={{ background: '#232329' }}\n                    >\n                      <div className=\"relative w-full aspect-video bg-gray-700\">\n                        {ep.still_path ? (\n                          <Image\n                            src={`https://image.tmdb.org/t/p/w500${ep.still_path}`}\n                            alt={ep.name || `Episode ${ep.episode_number}`}\n                            fill\n                            className=\"object-cover w-full h-full\"\n                          />\n                        ) : (\n                          <div className=\"w-full h-full flex items-center justify-center text-white/40 text-lg\">No Image</div>\n                        )}\n                        <span className=\"absolute top-2 left-2 bg-black/70 text-white text-xs font-bold px-2 py-1 rounded\">Episode {ep.episode_number}</span>\n                      </div>\n                      <div className=\"p-3 w-full flex-1 flex flex-col items-start\">\n                        <div className=\"text-base text-white font-bold mb-1 truncate w-full\">{ep.name}</div>\n                        <div className=\"text-xs text-gray-300 line-clamp-2 w-full\">{ep.overview}</div>\n                      </div>\n                    </button>\n                  ))\n                : episodes.map((e) => (\n                    <button\n                      key={e}\n                      className={`flex flex-col items-start rounded-xl border transition p-0 overflow-hidden shadow-md ${selectedEpisode === e ? 'border-purple-500 ring-2 ring-purple-400' : 'border-[#232329] hover:ring-2 hover:ring-cyan-400'}`}\n                      onClick={() => setSelectedEpisode(e)}\n                      style={{ background: '#232329' }}\n                    >\n                      <div className=\"relative w-full aspect-video bg-gray-700\">\n                        <div className=\"w-full h-full flex items-center justify-center text-white/40 text-lg\">No Image</div>\n                        <span className=\"absolute top-2 left-2 bg-black/70 text-white text-xs font-bold px-2 py-1 rounded\">Episode {e}</span>\n                      </div>\n                      <div className=\"p-3 w-full flex-1 flex flex-col items-start\">\n                        <div className=\"text-base text-white font-bold mb-1 truncate w-full\">Episode {e}</div>\n                      </div>\n                    </button>\n                  ))}\n            </div>\n          </div>\n        )}\n        {/* Watch Later button */}\n        <button\n          className={`glass-toggle px-4 py-2 rounded-lg border border-white/20 dark:border-black/20 backdrop-blur-md bg-white/10 dark:bg-black/20 text-white font-semibold ${isInWatchLater() ? 'bg-purple-600' : ''}`}\n          onClick={handleWatchLater}\n        >\n          {isInWatchLater() ? 'Remove from Watch Later' : 'Add to Watch Later'}\n        </button>\n        <button\n          className=\"glass-toggle px-4 py-2 rounded-lg border border-white/20 dark:border-black/20 backdrop-blur-md bg-white/10 dark:bg-black/20 text-white font-semibold\"\n          onClick={() => setShowWatchLater(true)}\n        >\n          Show Watch Later\n        </button>\n      </div>\n      {/* Similar Content Carousel (glassmorphic) */}\n      <div className=\"mt-8\">\n        <h2 className=\"text-2xl font-bold mb-3 text-white drop-shadow-lg\">Similar Content</h2>\n        <div className=\"flex gap-5 overflow-x-auto pb-2 scrollbar-thin scrollbar-thumb-cyan-400/30 scrollbar-track-transparent\">\n          {similarLoading ? (\n            <div className=\"text-white/60 py-8\">Loading...</div>\n          ) : similar.length === 0 ? (\n            <div className=\"text-white/60 py-8\">No similar content found.</div>\n          ) : (\n            similar.map((item) => (\n              <div\n                key={`${String(item.id ?? '')}-${String((item as Content)?.media_type ?? type)}`}\n                className={glassCard}\n                onClick={() => {\n                  const itemType = (item as any).media_type || (item as any).type || 'movie';\n                  router.push(`/watch/${itemType}/${item.id}`);\n                }}\n                title={item.title || item.name}\n              >\n                {item.poster_path ? (\n                  <Image\n                    src={`https://image.tmdb.org/t/p/w300${item.poster_path || ''}`}\n                    alt={item.title || item.name || ''}\n                    width={180}\n                    height={260}\n                    className=\"object-cover w-full h-[260px]\"\n                  />\n                ) : (\n                  <div className=\"w-full h-[260px] flex items-center justify-center text-white/40 bg-black/30\">No Image</div>\n                )}\n                <div className=\"p-2 text-white font-semibold text-center bg-gradient-to-t from-black/60 to-transparent\">\n                  {item.title || item.name}\n                </div>\n                <div className=\"text-yellow-400 text-xs text-center pb-2\">⭐ {item.vote_average?.toFixed(1) || 'N/A'}</div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n      {/* Watch Later Modal (glassmorphic) */}\n      {showWatchLater && (\n        <div className=\"fixed inset-0 z-50 bg-black/70 flex items-center justify-center\">\n          <div className=\"rounded-2xl bg-white/20 dark:bg-black/30 backdrop-blur-xl p-8 shadow-2xl border border-white/20 max-w-lg w-full\">\n            <h2 className=\"text-2xl font-bold mb-4 text-white\">Watch Later List</h2>\n            {watchLater.length === 0 ? (\n              <div className=\"text-white/70 text-center py-8\">No items in your watch later list.</div>\n            ) : (\n              <div className=\"grid grid-cols-2 gap-4\">\n                {watchLater.map((item) => {\n                  const idStr = typeof item.id === 'string' || typeof item.id === 'number' ? String(item.id) : '';\n                  const typeStr = typeof (item as Content).type === 'string' || typeof (item as Content).type === 'number' ? String((item as Content).type) : '';\n                  return (\n                    <div key={`${idStr}-${typeStr}`} className={glassCard + \" p-2 flex flex-col items-center\"}>\n                      {item.poster_path && (\n                        <Image src={`https://image.tmdb.org/t/p/w300${item.poster_path || ''}`} alt={item.title || ''} width={80} height={120} className=\"rounded mb-2\" />\n                      )}\n                      <div className=\"text-white text-sm font-semibold text-center mb-1\">{item.title}</div>\n                      <div className=\"text-yellow-400 text-xs\">⭐ {item.vote_average?.toFixed(1) || 'N/A'}</div>\n                      <button\n                        className=\"mt-2 px-2 py-1 rounded bg-purple-600 text-white text-xs\"\n                        onClick={() => {\n                          setWatchLater(watchLater.filter((w) => !(w.id === item.id && (typeof (w as Content).type === 'string' || typeof (w as Content).type === 'number') && (w as Content).type === (item as Content).type)));\n                        }}\n                      >\n                        Remove\n                      </button>\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n            <button onClick={() => setShowWatchLater(false)} className=\"mt-6 px-4 py-2 rounded-lg bg-purple-600 text-white w-full\">Close</button>\n          </div>\n        </div>\n      )}\n      {/* Context Menu (glassmorphic) */}\n      {showContextMenu && (\n        <div\n          style={{ left: contextMenuPos.x, top: contextMenuPos.y, position: 'fixed', zIndex: 100 }}\n          className=\"rounded-xl bg-white/20 dark:bg-black/30 backdrop-blur-xl shadow-lg border border-white/20 p-4 min-w-[180px]\"\n          onMouseLeave={closeContextMenu}\n        >\n          <button\n            className=\"block w-full text-left text-white py-1 hover:bg-white/10 rounded\"\n            onClick={() => handleCopy(content?.title || content?.name || '', 'Title')}\n          >\n            Copy Title\n          </button>\n          <button\n            className=\"block w-full text-left text-white py-1 hover:bg-white/10 rounded\"\n            onClick={() => handleCopy(id, 'TMDB ID')}\n          >\n            Copy TMDB ID\n          </button>\n          <button\n            className=\"block w-full text-left text-white py-1 hover:bg-white/10 rounded\"\n            onClick={() => { handleWatchLater(); closeContextMenu(); }}\n          >\n            {isInWatchLater() ? 'Remove from Watch Later' : 'Add to Watch Later'}\n          </button>\n          {copied && <div className=\"text-xs text-green-300 mt-2\">Copied {copied}!</div>}\n        </div>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1066, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/simpl/Desktop/nova-main/zeon/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}